//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vista.MVC.ClientesServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Clientes", Namespace="http://schemas.datacontract.org/2004/07/ServiceBackEnd.Entitites.Clases")]
    [System.SerializableAttribute()]
    public partial class Clientes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientesServiceReference.IClienteService")]
    public interface IClienteService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/GetAllClientes", ReplyAction="http://tempuri.org/IClienteService/GetAllClientesResponse")]
        Vista.MVC.ClientesServiceReference.Clientes[] GetAllClientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/GetAllClientes", ReplyAction="http://tempuri.org/IClienteService/GetAllClientesResponse")]
        System.Threading.Tasks.Task<Vista.MVC.ClientesServiceReference.Clientes[]> GetAllClientesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/AddCliente", ReplyAction="http://tempuri.org/IClienteService/AddClienteResponse")]
        string AddCliente(Vista.MVC.ClientesServiceReference.Clientes cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/AddCliente", ReplyAction="http://tempuri.org/IClienteService/AddClienteResponse")]
        System.Threading.Tasks.Task<string> AddClienteAsync(Vista.MVC.ClientesServiceReference.Clientes cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/GetClienteById", ReplyAction="http://tempuri.org/IClienteService/GetClienteByIdResponse")]
        Vista.MVC.ClientesServiceReference.Clientes GetClienteById(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/GetClienteById", ReplyAction="http://tempuri.org/IClienteService/GetClienteByIdResponse")]
        System.Threading.Tasks.Task<Vista.MVC.ClientesServiceReference.Clientes> GetClienteByIdAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/UpdateCliente", ReplyAction="http://tempuri.org/IClienteService/UpdateClienteResponse")]
        string UpdateCliente(Vista.MVC.ClientesServiceReference.Clientes cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/UpdateCliente", ReplyAction="http://tempuri.org/IClienteService/UpdateClienteResponse")]
        System.Threading.Tasks.Task<string> UpdateClienteAsync(Vista.MVC.ClientesServiceReference.Clientes cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/DeleteCliente", ReplyAction="http://tempuri.org/IClienteService/DeleteClienteResponse")]
        string DeleteCliente(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/DeleteCliente", ReplyAction="http://tempuri.org/IClienteService/DeleteClienteResponse")]
        System.Threading.Tasks.Task<string> DeleteClienteAsync(int value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClienteServiceChannel : Vista.MVC.ClientesServiceReference.IClienteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClienteServiceClient : System.ServiceModel.ClientBase<Vista.MVC.ClientesServiceReference.IClienteService>, Vista.MVC.ClientesServiceReference.IClienteService {
        
        public ClienteServiceClient() {
        }
        
        public ClienteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClienteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClienteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClienteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Vista.MVC.ClientesServiceReference.Clientes[] GetAllClientes() {
            return base.Channel.GetAllClientes();
        }
        
        public System.Threading.Tasks.Task<Vista.MVC.ClientesServiceReference.Clientes[]> GetAllClientesAsync() {
            return base.Channel.GetAllClientesAsync();
        }
        
        public string AddCliente(Vista.MVC.ClientesServiceReference.Clientes cliente) {
            return base.Channel.AddCliente(cliente);
        }
        
        public System.Threading.Tasks.Task<string> AddClienteAsync(Vista.MVC.ClientesServiceReference.Clientes cliente) {
            return base.Channel.AddClienteAsync(cliente);
        }
        
        public Vista.MVC.ClientesServiceReference.Clientes GetClienteById(int value) {
            return base.Channel.GetClienteById(value);
        }
        
        public System.Threading.Tasks.Task<Vista.MVC.ClientesServiceReference.Clientes> GetClienteByIdAsync(int value) {
            return base.Channel.GetClienteByIdAsync(value);
        }
        
        public string UpdateCliente(Vista.MVC.ClientesServiceReference.Clientes cliente) {
            return base.Channel.UpdateCliente(cliente);
        }
        
        public System.Threading.Tasks.Task<string> UpdateClienteAsync(Vista.MVC.ClientesServiceReference.Clientes cliente) {
            return base.Channel.UpdateClienteAsync(cliente);
        }
        
        public string DeleteCliente(int value) {
            return base.Channel.DeleteCliente(value);
        }
        
        public System.Threading.Tasks.Task<string> DeleteClienteAsync(int value) {
            return base.Channel.DeleteClienteAsync(value);
        }
    }
}
